name: Build and Deploy to AWS EC2

on:
  push:
    branches: [ "main" ]
  pull_request:
    types: ["closed"]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Initial Deployment Notification
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "ðŸš€ Deployment Started"
          description: |
            - Event: `${{ github.event_name }}`
            - Branch: `${{ github.ref_name }}`
            - Commit: `${{ github.sha }}`
            - Triggered by: `${{ github.actor }}`

  build:
    needs: notify
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64
          driver-opts: |
            image=moby/buildkit:latest

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: svssathvik7/catalog-pollings:latest
          platforms: linux/amd64
          cache-from: type=registry,ref=svssathvik7/catalog-pollings:buildcache
          cache-to: type=registry,ref=svssathvik7/catalog-pollings:buildcache,mode=max
          build-args: |
            NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}
            NEXT_PUBLIC_BUILD_API_URL=${{ secrets.NEXT_PUBLIC_BUILD_API_URL }}

      - name: Build Success Notification
        if: success()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "âœ… Build Success"
          description: "Docker image built and pushed: `svssathvik/catalog-pollings:latest`"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            docker pull svssathvik7/catalog-pollings:latest
            docker stop frontend || true
            docker rm frontend || true
            docker run -d --name frontend -p 3000:3000 svssathvik7/catalog-pollings:latest

      - name: Final Deployment Notification
        if: success()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "ðŸŽ‰ Deployment Success"
          description: "The polling app is now live on AWS EC2!"
          